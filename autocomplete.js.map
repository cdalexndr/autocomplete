{"version":3,"file":"autocomplete.js","sources":["autocomplete.ts"],"sourcesContent":["/*\r\n * https://github.com/kraaden/autocomplete\r\n * Copyright (c) 2016 Denys Krasnoshchok\r\n * MIT License\r\n */\r\n\r\nexport const enum EventTrigger {\r\n    Keyboard = 0,\r\n    Focus = 1\r\n}\r\n\r\nexport interface AutocompleteItem {\r\n    label?: string;\r\n    group?: string;\r\n}\r\n\r\nexport interface AutocompleteSettings<T extends AutocompleteItem> {\r\n    input: HTMLInputElement;\r\n    render?: (item: T, currentValue: string) => HTMLDivElement | undefined;\r\n    renderGroup?: (name: string, currentValue: string) => HTMLDivElement | undefined;\r\n    className?: string;\r\n    minLength?: number;\r\n    emptyMsg?: string;\r\n    onSelect: (item: T, input: HTMLInputElement) => void;\r\n    /**\r\n     * Show autocomplete on focus event. Focus event will ignore the `minLength` property and will always call `fetch`.\r\n     */\r\n    showOnFocus?: boolean;\r\n    fetch: (text: string, update: (items: T[] | false) => void, trigger: EventTrigger) => void;\r\n    debounceWaitMs?: number;\r\n    /**\r\n     * Callback for additional autocomplete customization\r\n     * @param {HTMLInputElement} input - input box associated with autocomplete\r\n     * @param {ClientRect | DOMRect} inputRect - size of the input box and its position relative to the viewport\r\n     * @param {HTMLDivElement} container - container with suggestions\r\n     * @param {number} maxHeight - max height that can be used by autocomplete\r\n     */\r\n    customize?: (input: HTMLInputElement, inputRect: ClientRect | DOMRect, container: HTMLDivElement, maxHeight: number) => void;\r\n    /**\r\n     * Prevents automatic form submit when ENTER is pressed\r\n     */\r\n    preventSubmit?: boolean;\r\n    /**\r\n     * Prevents automatic selection of first entry when ENTER is pressed\r\n     */\r\n    disableAutoSelect?: boolean;\r\n}\r\n\r\nexport interface AutocompleteResult {\r\n    destroy: () => void;\r\n}\r\n\r\nconst enum Keys {\r\n    Enter = 13,\r\n    Esc = 27,\r\n    Up = 38,\r\n    Down = 40,\r\n    Left = 37,\r\n    Right = 39,\r\n    Shift = 16,\r\n    Ctrl = 17,\r\n    Alt = 18,\r\n    CapsLock = 20,\r\n    WindowsKey = 91,\r\n    Tab = 9\r\n}\r\n\r\nexport default function autocomplete<T extends AutocompleteItem>(settings: AutocompleteSettings<T>): AutocompleteResult {\r\n\r\n    // just an alias to minimize JS file size\r\n    const doc = document;\r\n\r\n    const container: HTMLDivElement = doc.createElement(\"div\");\r\n    const containerStyle = container.style;\r\n    const userAgent = navigator.userAgent;\r\n    const mobileFirefox = userAgent.indexOf(\"Firefox\") !== -1 && userAgent.indexOf(\"Mobile\") !== -1;\r\n    const debounceWaitMs = settings.debounceWaitMs || 0;\r\n    const preventSubmit = settings.preventSubmit || false;\r\n\r\n    // 'keyup' event will not be fired on Mobile Firefox, so we have to use 'input' event instead\r\n    const keyUpEventName = mobileFirefox ? \"input\" : \"keyup\";\r\n\r\n    let items: T[] = [];\r\n    let inputValue = \"\";\r\n    let minLen = 2;\r\n    const showOnFocus = settings.showOnFocus;\r\n    let selected: T | undefined;\r\n    let keypressCounter = 0;\r\n    let debounceTimer: number | undefined;\r\n\r\n    if (settings.minLength !== undefined) {\r\n        minLen = settings.minLength;\r\n    }\r\n\r\n    if (!settings.input) {\r\n        throw new Error(\"input undefined\");\r\n    }\r\n\r\n    const input: HTMLInputElement = settings.input;\r\n\r\n    container.className = \"autocomplete \" + (settings.className || \"\");\r\n    containerStyle.position = \"fixed\";\r\n\r\n    /**\r\n     * Detach the container from DOM\r\n     */\r\n    function detach(): void {\r\n        const parent = container.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(container);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Detect if the script is running on IOS\r\n     */\r\n    function isIOS() {\r\n        return /iPad|iPhone|iPod/.test(window.navigator.userAgent) && !(window as any).MSStream;\r\n    }\r\n\r\n    /**\r\n     * Clear debouncing timer if assigned\r\n     */\r\n    function clearDebounceTimer(): void {\r\n        if (debounceTimer) {\r\n            window.clearTimeout(debounceTimer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attach the container to DOM\r\n     */\r\n    function attach(): void {\r\n        if (!container.parentNode) {\r\n            doc.body.appendChild(container);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if container for autocomplete is displayed\r\n     */\r\n    function containerDisplayed(): boolean {\r\n        return !!container.parentNode;\r\n    }\r\n\r\n    /**\r\n     * Clear autocomplete state and hide container\r\n     */\r\n    function clear(): void {\r\n        keypressCounter++;\r\n        items = [];\r\n        inputValue = \"\";\r\n        selected = undefined;\r\n        detach();\r\n    }\r\n\r\n    /**\r\n     * Update autocomplete position\r\n     */\r\n    function updatePosition(): void {\r\n        if (!containerDisplayed()) {\r\n            return;\r\n        }\r\n\r\n        containerStyle.height = \"auto\";\r\n        containerStyle.width = input.offsetWidth + \"px\";\r\n\r\n        const inputRect = input.getBoundingClientRect();\r\n        let top = isIOS()\r\n            ? inputRect.top + window.pageYOffset // a fix for buggy getBoundingClientRect on IOS\r\n            : inputRect.top;\r\n\r\n        top = top + input.offsetHeight;\r\n\r\n        let maxHeight = window.innerHeight - (inputRect.top + input.offsetHeight);\r\n\r\n        if (maxHeight < 0) {\r\n            maxHeight = 0;\r\n        }\r\n\r\n        containerStyle.top = top + \"px\";\r\n        containerStyle.bottom = \"\";\r\n        containerStyle.left = inputRect.left + \"px\";\r\n        containerStyle.maxHeight = maxHeight + \"px\";\r\n\r\n        if (settings.customize) {\r\n            settings.customize(input, inputRect, container, maxHeight);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Redraw the autocomplete div element with suggestions\r\n     */\r\n    function update(): void {\r\n\r\n        // delete all children from autocomplete DOM container\r\n        while (container.firstChild) {\r\n            container.removeChild(container.firstChild);\r\n        }\r\n\r\n        // function for rendering autocomplete suggestions\r\n        let render = function(item: T, currentValue: string): HTMLDivElement | undefined {\r\n            const itemElement = doc.createElement(\"div\");\r\n            itemElement.textContent = item.label || \"\";\r\n            return itemElement;\r\n        };\r\n        if (settings.render) {\r\n            render = settings.render;\r\n        }\r\n\r\n        // function to render autocomplete groups\r\n        let renderGroup = function(groupName: string, currentValue: string): HTMLDivElement | undefined {\r\n            const groupDiv = doc.createElement(\"div\");\r\n            groupDiv.textContent = groupName;\r\n            return groupDiv;\r\n        };\r\n        if (settings.renderGroup) {\r\n            renderGroup = settings.renderGroup;\r\n        }\r\n\r\n        const fragment = doc.createDocumentFragment();\r\n        let prevGroup = \"#9?$\";\r\n\r\n        items.forEach(function(item: T): void {\r\n            if (item.group && item.group !== prevGroup) {\r\n                prevGroup = item.group;\r\n                const groupDiv = renderGroup(item.group, inputValue);\r\n                if (groupDiv) {\r\n                    groupDiv.className += \" group\";\r\n                    fragment.appendChild(groupDiv);\r\n                }\r\n            }\r\n            const div = render(item, inputValue);\r\n            if (div) {\r\n                div.addEventListener(\"click\", function(ev: MouseEvent): void {\r\n                    settings.onSelect(item, input);\r\n                    clear();\r\n                    ev.preventDefault();\r\n                    ev.stopPropagation();\r\n                });\r\n                if (item === selected) {\r\n                    div.className += \" selected\";\r\n                }\r\n                fragment.appendChild(div);\r\n            }\r\n        });\r\n        container.appendChild(fragment);\r\n        if (items.length < 1) {\r\n            if (settings.emptyMsg) {\r\n                const empty = doc.createElement(\"div\");\r\n                empty.className = \"empty\";\r\n                empty.textContent = settings.emptyMsg;\r\n                container.appendChild(empty);\r\n            } else {\r\n                clear();\r\n                return;\r\n            }\r\n        }\r\n\r\n        attach();\r\n        updatePosition();\r\n\r\n        updateScroll();\r\n    }\r\n\r\n    function updateIfDisplayed(): void {\r\n        if (containerDisplayed()) {\r\n            update();\r\n        }\r\n    }\r\n\r\n    function resizeEventHandler(): void {\r\n        updateIfDisplayed();\r\n    }\r\n\r\n    function scrollEventHandler(e: Event): void {\r\n        if (e.target !== container) {\r\n            updateIfDisplayed();\r\n        } else {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    function keyupEventHandler(ev: KeyboardEvent): void {\r\n        const keyCode = ev.which || ev.keyCode || 0;\r\n\r\n        const ignore = [Keys.Up, Keys.Enter, Keys.Esc, Keys.Right, Keys.Left, Keys.Shift, Keys.Ctrl, Keys.Alt, Keys.CapsLock, Keys.WindowsKey, Keys.Tab];\r\n        for (const key of ignore) {\r\n            if (keyCode === key) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // the down key is used to open autocomplete\r\n        if (keyCode === Keys.Down && containerDisplayed()) {\r\n            return;\r\n        }\r\n\r\n        startFetch(EventTrigger.Keyboard);\r\n    }\r\n\r\n    /**\r\n     * Automatically move scroll bar if selected item is not visible\r\n     */\r\n    function updateScroll(): void {\r\n        const elements = container.getElementsByClassName(\"selected\");\r\n        if (elements.length > 0) {\r\n            let element = elements[0] as HTMLDivElement;\r\n\r\n            // make group visible\r\n            const previous = element.previousElementSibling as HTMLDivElement;\r\n            if (previous && previous.className.indexOf(\"group\") !== -1 && !previous.previousElementSibling) {\r\n                element = previous;\r\n            }\r\n\r\n            if (element.offsetTop < container.scrollTop) {\r\n                container.scrollTop = element.offsetTop;\r\n            } else {\r\n                const selectBottom = element.offsetTop + element.offsetHeight;\r\n                const containerBottom = container.scrollTop + container.offsetHeight;\r\n                if (selectBottom > containerBottom) {\r\n                    container.scrollTop += selectBottom - containerBottom;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select the previous item in suggestions\r\n     */\r\n    function selectPrev(): void {\r\n        if (items.length < 1) {\r\n            selected = undefined;\r\n        } else if (!selected) {\r\n            selected = items[items.length - 1];\r\n        } else if (selected === items[0]) {\r\n            selected = settings.disableAutoSelect ? undefined : items[items.length - 1];\r\n        } else {\r\n            for (let i = items.length - 1; i > 0; i--) {\r\n                if (selected === items[i] || i === 1) {\r\n                    selected = items[i - 1];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Select the next item in suggestions\r\n     */\r\n    function selectNext(): void {\r\n        if (items.length < 1) {\r\n            selected = undefined;\r\n        } else if (!selected) {\r\n            selected = items[0];\r\n        } else if (selected === items[items.length - 1]) {\r\n            selected = settings.disableAutoSelect ? undefined : items[0];\r\n        } else {\r\n            for (let i = 0; i < (items.length - 1); i++) {\r\n                if (selected === items[i]) {\r\n                    selected = items[i + 1];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function keydownEventHandler(ev: KeyboardEvent): void {\r\n        const keyCode = ev.which || ev.keyCode || 0;\r\n\r\n        if (keyCode === Keys.Up || keyCode === Keys.Down || keyCode === Keys.Esc) {\r\n            const containerIsDisplayed = containerDisplayed();\r\n\r\n            if (keyCode === Keys.Esc) {\r\n                clear();\r\n            } else {\r\n                if (!containerDisplayed || items.length < 1) {\r\n                    return;\r\n                }\r\n                keyCode === Keys.Up\r\n                    ? selectPrev()\r\n                    : selectNext();\r\n                update();\r\n            }\r\n\r\n            ev.preventDefault();\r\n            if (containerIsDisplayed) {\r\n                ev.stopPropagation();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (keyCode === Keys.Enter) {\r\n            if (selected) {\r\n                settings.onSelect(selected, input);\r\n                clear();\r\n            }\r\n    \r\n            if (preventSubmit) {\r\n                ev.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    function focusEventHandler(): void {\r\n        if (showOnFocus) {\r\n            startFetch(EventTrigger.Focus);\r\n        }\r\n    }\r\n\r\n    function startFetch(trigger: EventTrigger) {\r\n        // if multiple keys were pressed, before we get update from server,\r\n        // this may cause redrawing our autocomplete multiple times after the last key press.\r\n        // to avoid this, the number of times keyboard was pressed will be\r\n        // saved and checked before redraw our autocomplete box.\r\n        const savedKeypressCounter = ++keypressCounter;\r\n\r\n        const val = input.value;\r\n        if (val.length >= minLen || trigger === EventTrigger.Focus) {\r\n            clearDebounceTimer();\r\n            debounceTimer = window.setTimeout(function(): void {\r\n                settings.fetch(val, function(elements: T[] | false): void {\r\n                    if (keypressCounter === savedKeypressCounter && elements) {\r\n                        items = elements;\r\n                        inputValue = val;\r\n                        selected = (items.length < 1 || settings.disableAutoSelect) ? undefined : items[0];\r\n                        update();\r\n                    }\r\n                }, EventTrigger.Keyboard);\r\n            }, trigger === EventTrigger.Keyboard ? debounceWaitMs : 0);\r\n        } else {\r\n            clear();\r\n        }\r\n    }\r\n\r\n    function blurEventHandler(): void {\r\n        // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM\r\n        setTimeout(() => {\r\n            if (doc.activeElement !== input) {\r\n                clear();\r\n            }\r\n        }, 200);\r\n    }\r\n\r\n    /**\r\n     * Fixes #26: on long clicks focus will be lost and onSelect method will not be called\r\n     */\r\n    container.addEventListener(\"mousedown\", function(evt: Event) {\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n    });\r\n\r\n    /**\r\n     * This function will remove DOM elements and clear event handlers\r\n     */\r\n    function destroy(): void {\r\n        input.removeEventListener(\"focus\", focusEventHandler);\r\n        input.removeEventListener(\"keydown\", keydownEventHandler);\r\n        input.removeEventListener(keyUpEventName, keyupEventHandler as EventListenerOrEventListenerObject);\r\n        input.removeEventListener(\"blur\", blurEventHandler);\r\n        window.removeEventListener(\"resize\", resizeEventHandler);\r\n        doc.removeEventListener(\"scroll\", scrollEventHandler, true);\r\n        clearDebounceTimer();\r\n        clear();\r\n\r\n        // prevent the update call if there are pending AJAX requests\r\n        keypressCounter++;\r\n    }\r\n\r\n    // setup event handlers\r\n    input.addEventListener(\"keydown\", keydownEventHandler);\r\n    input.addEventListener(keyUpEventName, keyupEventHandler as EventListenerOrEventListenerObject);\r\n    input.addEventListener(\"blur\", blurEventHandler);\r\n    input.addEventListener(\"focus\", focusEventHandler);\r\n    window.addEventListener(\"resize\", resizeEventHandler);\r\n    doc.addEventListener(\"scroll\", scrollEventHandler, true);\r\n\r\n    return {\r\n        destroy\r\n    };\r\n}\r\n"],"names":[],"mappings":"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"}